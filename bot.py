import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime, timedelta

TOKEN = "7996519892:AAGl1jJS5pbOmJCBiJDiyYmhWqEmRn6ixmM"
ADMIN_GROUP_ID = -1002593269045
PAYMENT_REQUISITES = "–û–ø–ª–∞—Ç–∞ –Ω–∞ –Ω–æ–º–µ—Ä: 89322229930 (Ozon bank)\n–°—É–º–º–∞: 99‚ÇΩ –≤ –º–µ—Å—è—Ü"

bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ª—É—á—à–µ –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
users = {}

def get_username_or_id(user):
    if user.username:
        return f"@{user.username}"
    return str(user.id)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
def admin_confirm_button(user_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"confirm_{user_id}"))
    return keyboard

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    username = get_username_or_id(message.from_user)
    now = datetime.now()

    if user_id not in users:
        users[user_id] = {
            "start_date": now,
            "paid": False
        }
        text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *ChatSaver Bot* ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–∞–º–æ—É–¥–∞–ª—è—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞ –∏ –≤—Å–µ–≥–æ —á–∞—Ç–∞.\n\n"
            "üöÄ *–ß—Ç–æ –±–æ—Ç —É–º–µ–µ—Ç?*\n"
            "- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üì•\n"
            "- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–∞–º–æ—É–¥–∞–ª—è—é—â–∏–µ—Å—è —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ üì∏\n"
            "- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —á–∞—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω —É–¥–∞–ª—ë–Ω —É –≤—Å–µ—Ö üóëÔ∏è\n\n"
            "üÜì –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–∞ *–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è* –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!\n"
            "–ü–æ—Å–ª–µ 7 –¥–Ω–µ–π –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ 99‚ÇΩ –≤ –º–µ—Å—è—Ü.\n\n"
            "üí≥ –ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º: *–û–ø–ª–∞—Ç–∏–ª(–∞)*\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø.\n\n"
            "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏ —Å—é–¥–∞.\n\n"
            "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! ü§ñ"
        )
        bot.send_message(user_id, text, parse_mode='Markdown')
    else:
        bot.send_message(user_id, "‚úÖ –¢—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@bot.message_handler(func=lambda m: m.text and m.text.lower() in ["–æ–ø–ª–∞—Ç–∏–ª", "–æ–ø–ª–∞—Ç–∏–ª(–∞)"])
def handle_paid(message):
    user_id = message.from_user.id
    username = get_username_or_id(message.from_user)
    now = datetime.now()
    msg = (
        f"üí∏ *–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É!*\n\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n"
        f"ID: {user_id}\n"
        f"–í—Ä–µ–º—è: {now.strftime('%Y-%m-%d %H:%M:%S')}\n"
        f"{PAYMENT_REQUISITES}"
    )
    bot.send_message(message.chat.id, "‚åõ –û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞.")
    bot.send_message(ADMIN_GROUP_ID, msg, parse_mode='Markdown', reply_markup=admin_confirm_button(user_id))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤ –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø–µ
@bot.callback_query_handler(func=lambda call: call.data.startswith("confirm_"))
def callback_confirm_payment(call):
    if call.message.chat.id != ADMIN_GROUP_ID:
        bot.answer_callback_query(call.id, "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º.")
        return

    user_id_str = call.data.split("_")[1]
    try:
        user_id = int(user_id_str)
    except ValueError:
        bot.answer_callback_query(call.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    if user_id in users:
        users[user_id]["paid"] = True
        bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É, –±–æ—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.")
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"üîì –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å ID: {user_id}. –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.",
            parse_mode='Markdown'
        )
        bot.answer_callback_query(call.id, "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
    else:
        bot.answer_callback_query(call.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def has_access(user_id):
    user = users.get(user_id)
    if not user:
        return False
    if user["paid"]:
        return True
    return (datetime.now() - user["start_date"]) < timedelta(days=7)

# –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
# ...

bot.infinity_polling()
