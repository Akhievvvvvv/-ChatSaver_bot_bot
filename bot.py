import telebot
from telebot import types
from datetime import datetime, timedelta

TOKEN = "7996519892:AAGl1jJS5pbOmJCBiJDiyYmhWqEmRn6ixmM"
ADMIN_GROUP_ID = -1002593269045

bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users = {}

# –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
    btn2 = types.KeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏–ª(–∞)")
    btn3 = types.KeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å")
    btn4 = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    markup.add(btn1, btn2, btn3, btn4)
    return markup

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    now = datetime.now()

    if user_id not in users:
        users[user_id] = {
            "start_date": now,
            "paid": False
        }

    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, *{user_name}*!\n\n"
        "–Ø ‚Äî *ChatSaver Bot* ü§ñ\n"
        "‚ö°Ô∏è –Ø —Å–æ—Ö—Ä–∞–Ω—è—é —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–∞–º–æ—É–¥–∞–ª—è—é—â–∏–µ—Å—è –º–µ–¥–∏–∞.\n\n"
        "üÜì –£ —Ç–µ–±—è –µ—Å—Ç—å *–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è* –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n"
        "üí≥ –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ—Å–ª–µ ‚Äî –æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ *99‚ÇΩ* –≤ –º–µ—Å—è—Ü.\n\n"
        "–ù–∏–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º."
    )
    bot.send_message(user_id, welcome_text, parse_mode="Markdown", reply_markup=main_menu())

# –ö–Ω–æ–ø–∫–∞ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
@bot.message_handler(func=lambda m: m.text == "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
def send_instructions(message):
    instructions = (
        "üìö *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é ChatSaver Bot:*\n\n"
        "1Ô∏è‚É£ –î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —Å–≤–æ–∏ —á–∞—Ç—ã –∏–ª–∏ –ø–∏—à–∏ –ª–∏—á–Ω–æ.\n"
        "2Ô∏è‚É£ –Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—é —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –º–µ–¥–∏–∞.\n"
        "3Ô∏è‚É£ –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –Ω–µ–¥–µ–ª–∏ ‚Äî –æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É.\n"
        "4Ô∏è‚É£ –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É *–û–ø–ª–∞—Ç–∏–ª(–∞)* –∏ –æ–ø–ª–∞—Ç–∏ 99‚ÇΩ.\n"
        "5Ô∏è‚É£ –ê–¥–º–∏–Ω –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –æ–ø–ª–∞—Ç—É, –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø.\n\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É *–ü–æ–º–æ—â—å*."
    )
    bot.send_message(message.from_user.id, instructions, parse_mode="Markdown")

# –ö–Ω–æ–ø–∫–∞ –û–ø–ª–∞—Ç–∏–ª(–∞)
@bot.message_handler(func=lambda m: m.text.lower() in ["üí≥ –æ–ø–ª–∞—Ç–∏–ª(–∞)", "–æ–ø–ª–∞—Ç–∏–ª", "–æ–ø–ª–∞—Ç–∏–ª(–∞)"])
def handle_paid(message):
    user_id = message.from_user.id
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    notification = (
        f"üí∏ *–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É!*\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: [{user_id}](tg://user?id={user_id})\n"
        f"üïí –í—Ä–µ–º—è: {now}\n"
        f"üí∞ –°—É–º–º–∞: 99‚ÇΩ"
    )
    bot.send_message(ADMIN_GROUP_ID, notification, parse_mode="Markdown")
    bot.reply_to(message, "‚åõ –°–ø–∞—Å–∏–±–æ! –û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# –ö–Ω–æ–ø–∫–∞ –ú–æ–π —Å—Ç–∞—Ç—É—Å
@bot.message_handler(func=lambda m: m.text == "üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å")
def send_status(message):
    user_id = message.from_user.id
    user = users.get(user_id)
    if not user:
        bot.send_message(user_id, "‚ùå –¢—ã –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –ù–∞–∂–º–∏ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.")
        return

    now = datetime.now()
    start = user["start_date"]
    paid = user["paid"]

    if paid:
        status_text = "‚úÖ –£ —Ç–µ–±—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞. –ü–æ–ª—å–∑—É–π—Å—è –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!"
    else:
        days_left = 7 - (now - start).days
        if days_left > 0:
            status_text = f"üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞. –û—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–µ–Ω—å(–µ–π)."
        else:
            status_text = "‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Äî –æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É."

    bot.send_message(user_id, status_text)

# –ö–Ω–æ–ø–∫–∞ –ü–æ–º–æ—â—å
@bot.message_handler(func=lambda m: m.text == "‚ùì –ü–æ–º–æ—â—å")
def send_help(message):
    help_text = (
        "üÜò *–ü–æ–º–æ—â—å*\n\n"
        "–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞:\n"
        "üìß support@example.com\n\n"
        "–ò–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."
    )
    bot.send_message(message.from_user.id, help_text, parse_mode="Markdown")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
@bot.message_handler(commands=['confirm'])
def confirm_payment(message):
    if message.chat.id != ADMIN_GROUP_ID:
        return
    try:
        user_id = int(message.text.split()[1])
        if user_id in users:
            users[user_id]["paid"] = True
            bot.send_message(user_id, "üéâ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
            bot.send_message(ADMIN_GROUP_ID, f"üîì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
        else:
            bot.send_message(ADMIN_GROUP_ID, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except (IndexError, ValueError):
        bot.send_message(ADMIN_GROUP_ID, "‚ö†Ô∏è –£–∫–∞–∂–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /confirm, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n/confirm 123456789")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ –∫–æ–¥–µ –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –±—É–¥–µ—Ç –Ω—É–∂–Ω–∞)
def has_access(user_id):
    user = users.get(user_id)
    if not user:
        return False
    if user["paid"]:
        return True
    return (datetime.now() - user["start_date"]) < timedelta(days=7)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
bot.polling(none_stop=True)
