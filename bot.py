import telebot
from telebot import types
from datetime import datetime, timedelta

TOKEN = "7996519892:AAGl1jJS5pbOmJCBiJDiyYmhWqEmRn6ixmM"
ADMIN_GROUP_ID = -1002593269045

bot = telebot.TeleBot(TOKEN)

users = {}

def get_username_or_id(user):
    return f"@{user.username}" if user.username else f"ID: {user.id}"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def main_keyboard():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞"))
    kb.add(types.KeyboardButton("–û–ø–ª–∞—Ç–∏–ª(–∞)"))
    return kb

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
def payment_confirm_keyboard(user_id):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"confirm_{user_id}"))
    return kb

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    user_name = get_username_or_id(message.from_user)
    now = datetime.now()

    if user_id not in users:
        users[user_id] = {
            "start_date": now,
            "paid": False
        }
        welcome_text = (
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatSaver Bot ‚Äî —Ç–≤–æ–π –Ω–∞–¥—ë–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–∞–º–æ—É–¥–∞–ª—è—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞.\n\n"
            "üéÅ –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–∞ *–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è* –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.\n\n"
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n"
        )
        bot.send_message(user_id, welcome_text, parse_mode='Markdown', reply_markup=main_keyboard())
    else:
        bot.send_message(user_id, "‚úÖ –¢—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –Ω–∏–∂–µ.", reply_markup=main_keyboard())

@bot.message_handler(func=lambda m: m.text == "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞")
def send_activation_info(message):
    text = (
        "üöÄ *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ChatSaver Bot*\n\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∏–ª(–∞)¬ª –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî 99‚ÇΩ –≤ –º–µ—Å—è—Ü.\n"
        "2Ô∏è‚É£ –ê–¥–º–∏–Ω –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç —Ç–≤–æ—é –æ–ø–ª–∞—Ç—É.\n"
        "3Ô∏è‚É£ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∏ –Ω–∞—á–Ω—ë—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ.\n\n"
        "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ ‚Äî 7 –¥–Ω–µ–π! –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏ —Å—é–¥–∞, –º—ã –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–∂–µ–º! üòä"
    )
    bot.send_message(message.from_user.id, text, parse_mode='Markdown')

@bot.message_handler(func=lambda m: m.text.lower() in ["–æ–ø–ª–∞—Ç–∏–ª", "–æ–ø–ª–∞—Ç–∏–ª(–∞)"])
def handle_paid(message):
    user = message.from_user
    user_id = user.id
    user_name = get_username_or_id(user)
    now = datetime.now()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-–≥—Ä—É–ø–ø—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
    msg_text = (
        f"üí∏ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–ª–∞—Ç–∏–ª –ø–æ–¥–ø–∏—Å–∫—É!*\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n"
        f"üÜî ID: {user_id}\n"
        f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%Y-%m-%d %H:%M:%S')}\n"
        f"üí∞ –°—É–º–º–∞: 99‚ÇΩ"
    )
    bot.send_message(ADMIN_GROUP_ID, msg_text, parse_mode='Markdown', reply_markup=payment_confirm_keyboard(user_id))
    bot.reply_to(message, "‚åõ –û–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!")

@bot.callback_query_handler(func=lambda call: call.data.startswith("confirm_"))
def confirm_payment(call):
    if call.message.chat.id != ADMIN_GROUP_ID:
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.")
        return

    user_id_str = call.data.split("_")[1]
    try:
        user_id = int(user_id_str)
    except:
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    if user_id in users:
        users[user_id]["paid"] = True
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)
        bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –¢–µ–ø–µ—Ä—å –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.")
        bot.send_message(ADMIN_GROUP_ID, f"üîì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
        bot.answer_callback_query(call.id, "–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")
    else:
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def has_access(user_id):
    user = users.get(user_id)
    if not user:
        return False
    if user["paid"]:
        return True
    return (datetime.now() - user["start_date"]) < timedelta(days=7)

# –ó–¥–µ—Å—å –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–æ—á–µ–µ

bot.infinity_polling()
